---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: clusterscans.log.my.domain
spec:
  group: log.my.domain
  names:
    kind: ClusterScan
    listKind: ClusterScanList
    plural: clusterscans
    singular: clusterscan
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: ClusterScan is the Schema for the clusterscans API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: ClusterScanSpec defines the desired state of ClusterScan
            properties:
              name:
                description: The name of the cluster. Again, not sure if clusters
                  have names but seems useful to have in a scan.
                minLength: 0
                type: string
              nodes:
                description: list of nodes (create a new type for this shit)
                items:
                  description: Struct representing a node.
                  properties:
                    master:
                      type: boolean
                    name:
                      minLength: 0
                      type: string
                    numberOfPods:
                      format: int32
                      type: integer
                    status:
                      description: NodeStatus describes the status of a node. Only
                        one of the given statuses can be specified.
                      enum:
                      - Active
                      - Inactive
                      - Error
                      type: string
                    uid:
                      format: int32
                      type: integer
                  required:
                  - master
                  - name
                  - numberOfPods
                  - status
                  - uid
                  type: object
                minItems: 0
                type: array
              version:
                description: |-
                  The version of the cluster. I'm not exactly sure how cluster
                  versions work so this will always be "v1".
                minLength: 0
                type: string
            required:
            - nodes
            - version
            type: object
          status:
            description: ClusterScanStatus defines the observed state of ClusterScan
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
